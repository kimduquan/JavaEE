quarkus.container-image.group=epf
quarkus.container-image.name=epf-messaging
quarkus.kubernetes.name=epf-messaging
quarkus.http.port=9183
quarkus.jib.ports=9183
quarkus.kubernetes.image-pull-policy=if-not-present
quarkus.kubernetes.ports."http".container-port=9183
quarkus.kubernetes.ports."http".host-port=9183
jnosql.column.database=epf_messaging
jnosql.cassandra.query.1=CREATE KEYSPACE IF NOT EXISTS epf_messaging WITH replication = {'class': 'SimpleStrategy', 'replication_factor' : 1};
jnosql.cassandra.query.2=CREATE COLUMNFAMILY IF NOT EXISTS epf_messaging.Message (correlationID uuid, deliveryMode int, deliveryTime time, destination uuid, expiration time, messageID uuid, priority int, redelivered boolean, replyTo uuid, timestamp timestamp, type ascii, PRIMARY KEY (correlationID, messageID));
jnosql.cassandra.query.3=ALTER COLUMNFAMILY epf_messaging.Message ADD (text text);
jnosql.cassandra.query.4=ALTER COLUMNFAMILY epf_messaging.Message ADD (bytes blob);
jnosql.cassandra.query.5=CREATE COLUMNFAMILY IF NOT EXISTS epf_messaging.Destination (_id uuid, PRIMARY KEY (_id));
jnosql.cassandra.query.6=ALTER COLUMNFAMILY epf_messaging.Destination ADD (queueName ascii);
jnosql.cassandra.query.7=ALTER COLUMNFAMILY epf_messaging.Destination ADD (topicName text);
quarkus.kubernetes.env.vars.mp-messaging-connector-smallrye-kafka-security-protocol=SASL_PLAINTEXT
quarkus.kubernetes.env.vars.mp-messaging-connector-smallrye-kafka-sasl-mechanism=PLAIN
quarkus.kubernetes.env.vars.mp-messaging-connector-smallrye-kafka-sasl-jaas-config=org.apache.kafka.common.security.plain.PlainLoginModule required username="user1" password="0123456789";
quarkus.kubernetes.env.vars.mp-messaging-connector-smallrye-kafka-bootstrap-servers=kafka.default.svc.cluster.local:9092
mp.messaging.incoming.epf-messaging-text-in.topic=epf_messaging_text_in
mp.messaging.outgoing.epf-messaging-text-out.topic=epf_messaging_text_out
mp.messaging.incoming.epf-messaging-text-in.auto.offset.reset=earliest
mp.messaging.incoming.epf-messaging-bytes-in.topic=epf_messaging_bytes_in
mp.messaging.outgoing.epf-messaging-bytes-out.topic=epf_messaging_bytes_out
mp.messaging.incoming.epf-messaging-bytes-in.auto.offset.reset=earliest
mp.messaging.incoming.epf-messaging-text-in.value.deserializer=epf.messaging.util.io.JsonDeserializer
mp.messaging.outgoing.epf-messaging-text-out.value.serializer=epf.messaging.util.io.JsonSerializer
mp.messaging.incoming.epf-messaging-bytes-in.value.deserializer=epf.messaging.util.io.JsonDeserializer
mp.messaging.outgoing.epf-messaging-bytes-out.value.serializer=epf.messaging.util.io.JsonSerializer