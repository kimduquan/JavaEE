quarkus.index-dependency.javax-json-api.group-id=javax.json
quarkus.index-dependency.javax-json-api.artifact-id=javax.json-api
quarkus.index-dependency.EPF-json-schema.group-id=openup
quarkus.index-dependency.EPF-json-schema.artifact-id=EPF-json-schema
jnosql.document.database=epf_nosql_document
#jnosql.mongodb.host=mongodb.default.svc.cluster.local:27017
jnosql.column.database=epf_nosql_column
#jnosql.cassandra.host=cassandra.default.svc.cluster.local
jnosql.cassandra.query.1=CREATE KEYSPACE IF NOT EXISTS epf_nosql_column WITH replication = {'class': 'SimpleStrategy', 'replication_factor' : 1};
jnosql.cassandra.query.2=CREATE COLUMNFAMILY IF NOT EXISTS epf_nosql_column.Event (id uuid, type ascii, specVersion ascii, source ascii, subject text, time timestamp, dataContentType ascii, dataSchema ascii, data text, PRIMARY KEY ((source, type), id));
jnosql.cassandra.query.3=ALTER COLUMNFAMILY epf_nosql_column.Event ADD (name ascii, workflowDefinition ascii , eventDefinition ascii, state text);
jnosql.cassandra.query.4=CREATE INDEX IF NOT EXISTS ON epf_nosql_column.Event (name);
jnosql.cassandra.query.5=ALTER COLUMNFAMILY epf_nosql_column.Event ADD (onEventsDefinition int);
datastax-java-driver.basic.request.timeout=PT59S